import { Component, OnInit } from '@angular/core';
import { FormBuilder, FormGroup, FormsModule, ReactiveFormsModule, Validators } from '@angular/forms';
import { HttpClient, HttpHeaders } from '@angular/common/http'; // Added HttpHeaders for clarity
import { CommonModule } from '@angular/common';


@Component({
Â  selector: 'app-root',
Â  templateUrl: './app.html',
Â  imports: [
Â  Â  CommonModule, Â  Â  Â  Â 
Â  Â  ReactiveFormsModule Â 
Â  ],
Â  standalone: true, 
Â  
Â  styleUrls: ['./app.scss'] 
})
export class App implements OnInit {
Â  
Â  commentsForm!: FormGroup;
Â  submissionStatus: 'initial' | 'submitting' | 'success' | 'server_error' | 'validation_error' = 'initial'; 
Â  public V = Validators; 

Â  // !!! REPLACE THIS WITH YOUR DEPLOYED APPS SCRIPT WEB APP URL !!!
Â  // NOTE: Ensure this is the /exec URL, not the /dev URL.
Â  private readonly SCRIPT_URL = 'https://script.google.com/macros/s/AKfycbyl5cKShfcLj4NSe5vDtOyPFLL4S3yfDh-wpll2L0Mi6LA2RWYjdnvqTYDu0AyyWH2B/exec';

Â  // Time_of_Visit is removed
Â  initialData = {
Â  Â  Name: '',
Â  Â  Occupation: '',
Â  Â  Date_of_Birth: '',
Â  Â  Wedding_Anniversary: '',
Â  Â  Contact_Number: '',
Â  Â  Email: '',
Â  Â  Address: '', 
Â  Â  
Â  Â  Date_of_Visit: '', 
Â  Â  
Â  Â  Hospitality: 0, 
Â  Â  Attention: 0,
Â  Â  Food_Quality: 0, 
Â  Â  Taste: 0,
Â  Â  Food_Temperature: 0,
Â  Â  Food_Presentation: 0,
Â  Â  Ambience: 0,
Â  Â  Decor: 0, Â  Â  Â  Â 
Â  Â  Cleanliness: 0,
Â  Â  Music: 0,

Â  Â  How_Did_You_Hear: '',
Â  Â  Dishes_Liked: '',
Â  Â  Dishes_Disliked: '',
Â  Â  Any_Suggestions: '',

Â  Â  Manager_Visit: '', 
Â  Â  Return_to_Palace: '', 
Â  Â  
Â  Â  Table_No: '',
Â  Â  Steward: '',
Â  Â  Manager: ''
Â  };

Â  constructor(private fb: FormBuilder, private http: HttpClient) { }

Â  ngOnInit(): void {
Â  Â  this.commentsForm = this.fb.group({
Â  Â  Â  // Personal & Visit Details
Â  Â  Â  Name: [this.initialData.Name, Validators.required],
Â  Â  Â  Occupation: [this.initialData.Occupation],
Â  Â  Â  Date_of_Birth: [this.initialData.Date_of_Birth],
Â  Â  Â  Wedding_Anniversary: [this.initialData.Wedding_Anniversary],
Â  Â  Â  Contact_Number: [this.initialData.Contact_Number],
Â  Â  Â  Email: [this.initialData.Email, Validators.email],
Â  Â  Â  Address: [this.initialData.Address], 
Â  Â  Â  
Â  Â  Â  Date_of_Visit: [this.initialData.Date_of_Visit, Validators.required],
Â  Â  Â  
Â  Â  Â  // Ratings
Â  Â  Â  Hospitality: [this.initialData.Hospitality],
Â  Â  Â  Attention: [this.initialData.Attention],
Â  Â  Â  Food_Quality: [this.initialData.Food_Quality],
Â  Â  Â  Taste: [this.initialData.Taste],
Â  Â  Â  Food_Temperature: [this.initialData.Food_Temperature],
Â  Â  Â  Food_Presentation: [this.initialData.Food_Presentation],
Â  Â  Â  Ambience: [this.initialData.Ambience],
Â  Â  Â  Decor: [this.initialData.Decor],
Â  Â  Â  Cleanliness: [this.initialData.Cleanliness],
Â  Â  Â  Music: [this.initialData.Music],

Â  Â  Â  // Open-ended/Specific Questions
Â  Â  Â  How_Did_You_Hear: [this.initialData.How_Did_You_Hear],
Â  Â  Â  Dishes_Liked: [this.initialData.Dishes_Liked],
Â  Â  Â  Dishes_Disliked: [this.initialData.Dishes_Disliked], 
Â  Â  Â  Any_Suggestions: [this.initialData.Any_Suggestions],

Â  Â  Â  // Yes/No
Â  Â  Â  Manager_Visit: [this.initialData.Manager_Visit, Validators.required],
Â  Â  Â  Return_to_Palace: [this.initialData.Return_to_Palace, Validators.required],
Â  Â  Â  
Â  Â  Â  // Footer fields
Â  Â  Â  Table_No: [this.initialData.Table_No],
Â  Â  Â  Steward: [this.initialData.Steward],
Â  Â  Â  Manager: [this.initialData.Manager]
Â  Â  });
Â  }

Â  onSubmit(): void {
Â  Â  if (this.commentsForm.invalid) {
Â  Â  Â  this.commentsForm.markAllAsTouched();
Â  Â  Â  this.submissionStatus = 'validation_error';
Â  Â  Â  return;
Â  Â  }

Â  Â  this.submissionStatus = 'submitting';
Â  Â  
Â  Â  // --- ðŸ’¥ CRITICAL CHANGE: Format data for Apps Script ---
Â  Â  // Apps Script is much happier with application/x-www-form-urlencoded format
Â  Â  // However, to get the robustness of the doPost(e) function which uses e.postData.contents,
Â  Â  // we will keep sending a JSON string, but we will simplify the HTTP configuration
Â  Â  // and append a callback parameter to force a cleaner response path.
Â  Â  
Â  Â  const formData = this.commentsForm.value;
Â  Â  
Â  Â  // We will use a URLSearchParams approach to package the JSON string under a single key,
Â  Â  // which often resolves deep-seated CORS/preflight issues with Apps Script.
Â  Â  
Â  Â  const body = new URLSearchParams();
Â  Â  body.set('data', JSON.stringify(formData));
Â  Â  
Â  Â  // This ensures the request doesn't trigger a CORS preflight, which is likely being blocked.
Â  Â  const headers = new HttpHeaders({ 
Â  Â  Â  'Content-Type': 'application/x-www-form-urlencoded' 
Â  Â  });

Â  Â  // We MUST use the /exec endpoint. The Apps Script doPost needs to be modified 
Â  Â  // to use e.parameter.data when using URLSearchParams (next step).
Â  Â  
Â  Â  this.http.post(this.SCRIPT_URL, body.toString(), { headers }).subscribe({
Â  Â  Â  next: (response) => {
Â  Â  Â  Â  console.log('Submission Success:', response);
Â  Â  Â  Â  this.submissionStatus = 'success';
Â  Â  Â  Â  this.commentsForm.reset(this.initialData);
Â  Â  Â  },
Â  Â  Â  error: (error) => {
Â  Â  Â  Â  console.error('Submission Error:', error);
Â  Â  Â  Â  this.submissionStatus = 'server_error';
Â  Â  Â  }
Â  Â  });
Â  }
};
